/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema_registro;

import codigo.Conexion_consulta;
import static java.awt.Frame.ICONIFIED;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import sistema_registro.SQL.ConectorSQL;

/**
 *
 * @author asus
 */
public class Carrera extends javax.swing.JFrame {
     String titulos [] = {"Id Carrera","Carrera","Facultad"};
    //String fila [] = new String[9];
    DefaultTableModel modelo =  new DefaultTableModel();
    Connection con = null;
    Statement stmt = null;
    String var, var2;

    /**
     * Creates new form Carrera
     */
    public Carrera() throws SQLException {
          this.con = ConectorSQL.obtenerConexion();
        initComponents();
        ArrayList<String> lista = new ArrayList<String>();
             lista = new Conexion_consulta().llenar_Facultad();
            for(int i = 0; i<lista.size();i++){
                cbo_idfacultad.addItem(lista.get(i));
            }
             this.setLocationRelativeTo(null);
            this.setTitle("Carrera");
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_idCarrera = new javax.swing.JLabel();
        lbl_nombreCarrera = new javax.swing.JLabel();
        txt_idCarrera = new javax.swing.JTextField();
        txt_NombreCarrera = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla_Carrera = new javax.swing.JTable();
        lbl_titulo = new javax.swing.JLabel();
        btn_guardar = new javax.swing.JButton();
        btn_buscar = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();
        lbl_facultad = new javax.swing.JLabel();
        cbo_idfacultad = new javax.swing.JComboBox<>();
        btn_actualizar1 = new javax.swing.JButton();
        btn_AdmFacultades = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbl_idCarrera.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_idCarrera.setText("ID Carrera");

        lbl_nombreCarrera.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_nombreCarrera.setText("Carrera");

        txt_idCarrera.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_idCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_idCarreraActionPerformed(evt);
            }
        });
        txt_idCarrera.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_idCarreraKeyTyped(evt);
            }
        });

        txt_NombreCarrera.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_NombreCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_NombreCarreraActionPerformed(evt);
            }
        });
        txt_NombreCarrera.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_NombreCarreraKeyTyped(evt);
            }
        });

        Tabla_Carrera.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Carrera", "Carrera", "Facultad"
            }
        ));
        Tabla_Carrera.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tabla_CarreraMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tabla_Carrera);

        lbl_titulo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbl_titulo.setText("Carrera");

        btn_guardar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botton_Guardar.png"))); // NOI18N
        btn_guardar.setText("Guardar");
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });

        btn_buscar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botton_Consulta.png"))); // NOI18N
        btn_buscar.setText("Buscar");
        btn_buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_buscarMouseClicked(evt);
            }
        });
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });

        btn_eliminar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botton_Eliminar.png"))); // NOI18N
        btn_eliminar.setText("Eliminar");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });

        lbl_facultad.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_facultad.setText("Facultad");

        cbo_idfacultad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una facultad" }));

        btn_actualizar1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_actualizar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botton_Actualizar.png"))); // NOI18N
        btn_actualizar1.setText("Actualizar");
        btn_actualizar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizar1ActionPerformed(evt);
            }
        });

        btn_AdmFacultades.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botton_Actualizar.png"))); // NOI18N
        btn_AdmFacultades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AdmFacultadesActionPerformed(evt);
            }
        });

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_actualizar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_buscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_nombreCarrera)
                            .addComponent(lbl_idCarrera)
                            .addComponent(lbl_facultad))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(cbo_idfacultad, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_NombreCarrera, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_idCarrera, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(btn_AdmFacultades)
                        .addGap(76, 76, 76))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(93, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_titulo)
                .addGap(381, 381, 381))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(lbl_titulo)
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_idCarrera)
                            .addComponent(txt_idCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(btn_guardar)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_nombreCarrera)
                            .addComponent(txt_NombreCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_facultad)
                            .addComponent(cbo_idfacultad, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_AdmFacultades, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btn_actualizar1)
                        .addGap(18, 18, 18)
                        .addComponent(btn_buscar)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btn_eliminar)))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_idCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_idCarreraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_idCarreraActionPerformed

    private void txt_idCarreraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_idCarreraKeyTyped
        if (txt_idCarrera.getText().length() >=3) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "Número máximo de caracteres admitidos");
        }
        if (evt.getKeyChar() == 8 || evt.getKeyChar() == 127
            || evt.getKeyChar() == 0 || evt.getKeyChar() == 3 || evt.getKeyChar() == 22
            || evt.getKeyChar() == 26 || evt.getKeyChar() == 24) {
            return;
        }
        char a = evt.getKeyChar();
        if (!Character.isLetterOrDigit(a)) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "Sólo letras y numeros");
        }
    }//GEN-LAST:event_txt_idCarreraKeyTyped

    private void txt_NombreCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_NombreCarreraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_NombreCarreraActionPerformed

    private void txt_NombreCarreraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_NombreCarreraKeyTyped
        if (txt_NombreCarrera.getText().length() >= 100) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "Número máximo de caracteres admitidos");
        }
        if (evt.getKeyChar() == 8 || evt.getKeyChar() == 127
            || evt.getKeyChar() == 0 || evt.getKeyChar() == 3 || evt.getKeyChar() == 22
            || evt.getKeyChar() == 32 || evt.getKeyChar() == 26 || evt.getKeyChar() == 24) {
            return;
        }
        char a = evt.getKeyChar();
        if (Character.isDigit(a)) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "Sólo letras");
        }
    }//GEN-LAST:event_txt_NombreCarreraKeyTyped

    private void Tabla_CarreraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tabla_CarreraMouseClicked
          if(Tabla_Carrera.getSelectedRow() >= 0){
            llenarCampos();
        }
    }//GEN-LAST:event_Tabla_CarreraMouseClicked

    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed
        String cadena1, cadena2, cadena3;
        cadena1 = txt_idCarrera.getText();
        cadena2 = txt_NombreCarrera.getText();
       String id_facultad = cbo_idfacultad.getSelectedItem().toString().substring(0, 3);

         
        if ((txt_idCarrera.getText().equals("")) || (txt_NombreCarrera.getText().equals("")) || 
          (cbo_idfacultad.getSelectedItem().equals("Seleccione la facultad"))) {
            
            javax.swing.JOptionPane.showMessageDialog(this,"¡Debe llenar todos los campos! \n","¡AVISO!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            txt_NombreCarrera.requestFocus();
            return;
        }

        if (existeCarrera()) {
            return;
        }

        if (!validarLongitud(txt_idCarrera, 2)) {
            JOptionPane.showMessageDialog(null, "El id ingresado es muy pequeños el mínimo es de 2 caracteres", "Longitud de id carrera", JOptionPane.INFORMATION_MESSAGE);
            return;

        }

        if (!validarLongitud(txt_NombreCarrera,10 )) {
            JOptionPane.showMessageDialog(null, "El  nombre ingresado es muy pequeños el mínimo es de 10 caracteres", "Longitud de nombre carrera", JOptionPane.INFORMATION_MESSAGE);
            return;

        }

        try {
            PreparedStatement ps;
            ResultSet rs;
            ps = con.prepareStatement("INSERT INTO Carrera (id_carrera, nombre_carrera,id_facultad)"
                + "                VALUES(?,?,?)");
            ps.setString(1, txt_idCarrera.getText());
            ps.setString(2, txt_NombreCarrera.getText());
             ps.setString(3, id_facultad);
            int res = ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Se ha guradod la información del carrera");
        } catch (Exception e) {
            System.out.println(e);

        }
     
        actualizarDatos();
        LimpiarCajas();

    }//GEN-LAST:event_btn_guardarActionPerformed

    private void btn_buscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_buscarMouseClicked
        rellenar();
        this.jScrollPane1.setEnabled(true);
        this.Tabla_Carrera.setEnabled(true);
    }//GEN-LAST:event_btn_buscarMouseClicked

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        actualizarDatos();
        LimpiarCajas();
    }//GEN-LAST:event_btn_buscarActionPerformed

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
          String nombreCarrera = txt_NombreCarrera.getText();
           if(JOptionPane.showConfirmDialog(null,"¿Está seguro que desea eliminar el registro de la carrera "+nombreCarrera+"","Confirmación de eliminación",
                   JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE
            )==JOptionPane.YES_OPTION){   
                String id_facultad = cbo_idfacultad.getSelectedItem().toString().substring(0, 2);
      try{
          PreparedStatement ps;
          ResultSet rs;
          ps=con.prepareStatement("Delete Carrera "
                  + "where id_carrera = (Select id_carrera from Carrera where nombre_carrera = '"+txt_NombreCarrera.getText()+"')");
                  int res= ps.executeUpdate();
                  JOptionPane.showMessageDialog(null, "Se ha borrado la información del empleado "+nombreCarrera+" correctamente");
                  if(res > 0){ 
                  }else {
                      JOptionPane.showMessageDialog(null, "¡Error al eliminar la información!"); 
                  }
      } catch ( Exception e) {
            System.out.println(e);
        }
           }
           actualizarDatos();
           LimpiarCajas();
    }//GEN-LAST:event_btn_eliminarActionPerformed

    private void btn_actualizar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizar1ActionPerformed
            String nombreCarrera = txt_NombreCarrera.getText() + " ";
        
        if (JOptionPane.showConfirmDialog(null, "¿Está seguro que desea actualizar el registro de carrera" + nombreCarrera + "?", "Confirmación de actualización", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE
        ) == JOptionPane.YES_OPTION) {
           String id_facultad = cbo_idfacultad.getSelectedItem().toString().substring(0, 2);
            try {
                PreparedStatement ps;
                ResultSet rs;
                ps = con.prepareStatement("Update Carrera set"
                        + " nombre_carrera = ? ,"
                        + " id_carrera = ? "
                        + " where id_carrera =\'"+txt_idCarrera.getText()+"\'");
                
                ps.setString(1, txt_NombreCarrera.getText());
                ps.setString(2, txt_idCarrera.getText());
               /* ps.setString(3, id_facultad);*/
                int res = ps.executeUpdate();
            } catch (Exception e) {
                System.out.println(e);
            }
           
        }
        actualizarDatos();
        LimpiarCajas();
    }//GEN-LAST:event_btn_actualizar1ActionPerformed

    private void btn_AdmFacultadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AdmFacultadesActionPerformed
        Facultad facultad = null;
        try {
            facultad = new Facultad();
        } catch (SQLException ex) {
            Logger.getLogger(Carrera.class.getName()).log(Level.SEVERE, null, ex);
        }
        facultad.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_AdmFacultadesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Carrera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Carrera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Carrera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Carrera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Carrera().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Carrera.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabla_Carrera;
    private javax.swing.JButton btn_AdmFacultades;
    private javax.swing.JButton btn_actualizar1;
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_guardar;
    private javax.swing.JComboBox<String> cbo_idfacultad;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_facultad;
    private javax.swing.JLabel lbl_idCarrera;
    private javax.swing.JLabel lbl_nombreCarrera;
    private javax.swing.JLabel lbl_titulo;
    private javax.swing.JTextField txt_NombreCarrera;
    private javax.swing.JTextField txt_idCarrera;
    // End of variables declaration//GEN-END:variables

    private boolean existeCarrera() {
        try {
            Statement st = con.createStatement();
            String sql = "Select id_carrera from Carrera where nombre_carrera = '" + txt_NombreCarrera.getText() + "'";
            ResultSet rs = st.executeQuery(sql);
            if (rs.next()) {
                JOptionPane.showMessageDialog(null, "La carrera: " + txt_NombreCarrera.getText() + " ya existe", "La  carrera ¡Ya existe!", JOptionPane.INFORMATION_MESSAGE);
                return true;
            } else {
                return false;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Carrera.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }

    private boolean validarLongitud(JTextField texto, int longitud) {
        if (texto.getText().length() >= longitud) {
            return true;
        } else {
            return false;
        }
    }

    private void llenarCampos() {
        int i = Tabla_Carrera.getSelectedRow();
        txt_idCarrera.setText(Tabla_Carrera.getValueAt(i, 0).toString());
        txt_NombreCarrera.setText(Tabla_Carrera.getValueAt(i, 1).toString());
        cbo_idfacultad.setSelectedItem(Tabla_Carrera.getValueAt(i, 2).toString());
 
        
    }

    private void rellenar() {
        try {
                    String cap = "";
                    ResultSet rs2 = null;
                   var = JOptionPane.showInputDialog(this, "Ingrese el nombre de la carrera que desea consultar", "Consulta de carrera", JOptionPane.QUESTION_MESSAGE);
                    if (var == null) {
                        JOptionPane.showMessageDialog(this, "La acción fue cancelada", "¡AVISO!", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        if (var.equals("")) {
                            JOptionPane.showMessageDialog(this, "Favor de ingresar el nombre de la carrera\n que desea consultar", "¡AVISO!", JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            String sql = "SELECT * FROM Carrera where id_carrera='"+var+"' or nombre_carrera ='"+var+"'";
                            stmt = con.createStatement();
                            rs2 = stmt.executeQuery(sql);

                            if (rs2.next()) {
                                txt_idCarrera.setText(rs2.getString("id_carrera"));
                                txt_NombreCarrera.setText(rs2.getString("nombre_carrera"));
                            } else {
                                JOptionPane.showMessageDialog(null, "¡No se encuentra los datos: "+var+" ! Por favor verifique sí, lo escribio correctamente");
                            }
                        }

                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
    }
    
     public void centrar_datos(){
 
        DefaultTableCellRenderer modelocentrar = new DefaultTableCellRenderer();
        modelocentrar.setHorizontalAlignment(SwingConstants.CENTER);
        Tabla_Carrera.getColumnModel().getColumn(2).setCellRenderer(modelocentrar);
    }
     
      public void actualizarDatos() {
        try {
            String sql = "SELECT * FROM Carrera";
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            modelo = new DefaultTableModel(null, titulos);
            Tabla_Carrera.setModel(modelo);
            while (rs.next()) {
                String[] datos = new String[3];
                datos[0] = rs.getString("id_carrera");
                datos[1] = rs.getString("nombre_carrera");
                datos[2] =rs.getString("id_facultad");
                modelo.addRow(datos);
            }
            TableColumn idC = Tabla_Carrera.getColumn(titulos[0]);
            idC.setMaxWidth(150);
            idC.setIdentifier(ICONIFIED);
            TableColumn cnombre = Tabla_Carrera.getColumn(titulos[1]);
            cnombre.setMaxWidth(300);
            TableColumn cfacultad = Tabla_Empleados.getColumn(titulos[2]);
                cfacultad.setMaxWidth(95);
        } catch (Exception e) {
           /* JOptionPane.showMessageDialog(null, e.getMessage());*/
            System.err.println(e);
        }
    }
      
      private void LimpiarCajas(){
        txt_NombreCarrera.setText(null);
        txt_idCarrera.setText(null);
       cbo_idfacultad.setSelectedIndex(0);
        
    }
}

